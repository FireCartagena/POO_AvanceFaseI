package vista;

import datos.Conexion;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import datos.MaterialesCRUD;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;


public class Agregar_DVD extends javax.swing.JFrame {
   
   Conexion co = new Conexion();
   Connection con = co.getConnection();
   
    public Agregar_DVD() throws SQLException {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Agregar Libro.");
        
        //DESHABILITAR BOTON CERRAR
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        this.addWindowListener(new WindowAdapter() {
          public void windowClosing(WindowEvent e) {
            JOptionPane.showMessageDialog(null, "Usar el boton SALIR del menu inicio!", "AVISO",JOptionPane.INFORMATION_MESSAGE);
          }
        });           
        this.setTitle("Agregar DVD al sistema");
        consultarGenero();
        consultarDirector();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlAgregarMenu = new javax.swing.JPanel();
        lblNewLibro = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        txtTitulodvd = new javax.swing.JTextField();
        lblTitulodvd = new javax.swing.JLabel();
        jSeparator10 = new javax.swing.JSeparator();
        lblDirector = new javax.swing.JLabel();
        jSeparator12 = new javax.swing.JSeparator();
        lblGenero = new javax.swing.JLabel();
        jSeparator13 = new javax.swing.JSeparator();
        txtDuracion = new javax.swing.JTextField();
        lblFecha = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jSeparator15 = new javax.swing.JSeparator();
        lblCanciones1 = new javax.swing.JLabel();
        txtFecha = new javax.swing.JTextField();
        jSeparator16 = new javax.swing.JSeparator();
        jComboBox2 = new javax.swing.JComboBox<>();
        lblDisponible = new javax.swing.JLabel();
        txtDisponible = new javax.swing.JTextField();
        jSeparator17 = new javax.swing.JSeparator();
        jComboBox1 = new javax.swing.JComboBox<>();
        lblTituloLibro1 = new javax.swing.JLabel();
        jSeparator11 = new javax.swing.JSeparator();
        txtUbicacionCV = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlAgregarMenu.setBackground(new java.awt.Color(0, 0, 51));
        pnlAgregarMenu.setForeground(new java.awt.Color(102, 0, 204));
        pnlAgregarMenu.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblNewLibro.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblNewLibro.setForeground(new java.awt.Color(255, 255, 255));
        lblNewLibro.setText("Agregar DVD");
        pnlAgregarMenu.add(lblNewLibro, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, -1, -1));
        pnlAgregarMenu.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 92, -1, 170));
        pnlAgregarMenu.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 80, -1, -1));

        jSeparator5.setForeground(new java.awt.Color(102, 0, 204));
        jSeparator5.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator5.setPreferredSize(new java.awt.Dimension(200, 10));
        pnlAgregarMenu.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 20, 10, 440));

        jSeparator6.setForeground(new java.awt.Color(102, 0, 204));
        jSeparator6.setPreferredSize(new java.awt.Dimension(200, 10));
        pnlAgregarMenu.add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, 260, 10));

        jSeparator7.setForeground(new java.awt.Color(102, 0, 204));
        jSeparator7.setPreferredSize(new java.awt.Dimension(200, 10));
        pnlAgregarMenu.add(jSeparator7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, 260, 10));

        txtTitulodvd.setBackground(new java.awt.Color(0, 0, 51));
        txtTitulodvd.setForeground(new java.awt.Color(102, 102, 102));
        txtTitulodvd.setText("Ingrese título");
        txtTitulodvd.setAlignmentX(0.8F);
        txtTitulodvd.setBorder(null);
        txtTitulodvd.setMargin(new java.awt.Insets(5, 15, 5, 5));
        txtTitulodvd.setMinimumSize(new java.awt.Dimension(5, 20));
        txtTitulodvd.setName("txtTitulodvd"); // NOI18N
        txtTitulodvd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtTitulodvdMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtTitulodvdMousePressed(evt);
            }
        });
        txtTitulodvd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTitulodvdActionPerformed(evt);
            }
        });
        pnlAgregarMenu.add(txtTitulodvd, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, 260, 30));

        lblTitulodvd.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTitulodvd.setForeground(new java.awt.Color(255, 255, 255));
        lblTitulodvd.setText("Título");
        lblTitulodvd.setName("llblTituloRevista"); // NOI18N
        pnlAgregarMenu.add(lblTitulodvd, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, -1, -1));

        jSeparator10.setForeground(new java.awt.Color(102, 0, 204));
        jSeparator10.setPreferredSize(new java.awt.Dimension(200, 10));
        pnlAgregarMenu.add(jSeparator10, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 240, 260, 10));

        lblDirector.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblDirector.setForeground(new java.awt.Color(255, 255, 255));
        lblDirector.setText("Director");
        lblDirector.setName("lblDirector"); // NOI18N
        pnlAgregarMenu.add(lblDirector, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, -1, -1));

        jSeparator12.setForeground(new java.awt.Color(102, 0, 204));
        jSeparator12.setPreferredSize(new java.awt.Dimension(200, 10));
        pnlAgregarMenu.add(jSeparator12, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 330, 260, 10));

        lblGenero.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblGenero.setForeground(new java.awt.Color(255, 255, 255));
        lblGenero.setText("Género");
        lblGenero.setName("lblGenero"); // NOI18N
        pnlAgregarMenu.add(lblGenero, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, -1, -1));

        jSeparator13.setForeground(new java.awt.Color(102, 0, 204));
        jSeparator13.setPreferredSize(new java.awt.Dimension(200, 10));
        pnlAgregarMenu.add(jSeparator13, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 140, 260, 10));

        txtDuracion.setBackground(new java.awt.Color(0, 0, 51));
        txtDuracion.setForeground(new java.awt.Color(102, 102, 102));
        txtDuracion.setText("Ingrese duracion");
        txtDuracion.setAlignmentX(0.8F);
        txtDuracion.setBorder(null);
        txtDuracion.setMargin(new java.awt.Insets(5, 15, 5, 5));
        txtDuracion.setMinimumSize(new java.awt.Dimension(5, 20));
        txtDuracion.setName("txtDuracion"); // NOI18N
        txtDuracion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtDuracionMousePressed(evt);
            }
        });
        txtDuracion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDuracionActionPerformed(evt);
            }
        });
        pnlAgregarMenu.add(txtDuracion, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 110, 260, 30));

        lblFecha.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblFecha.setForeground(new java.awt.Color(255, 255, 255));
        lblFecha.setText("Duración (En minutos)");
        lblFecha.setName("lblFecha"); // NOI18N
        pnlAgregarMenu.add(lblFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 90, -1, 20));

        btnAgregar.setForeground(new java.awt.Color(51, 0, 153));
        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/btn-agregar.png"))); // NOI18N
        btnAgregar.setText("Agregar");
        btnAgregar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAgregar.setName("btnAgregar"); // NOI18N
        btnAgregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnAgregarMousePressed(evt);
            }
        });
        pnlAgregarMenu.add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 420, 110, 40));

        btnCancelar.setForeground(new java.awt.Color(51, 0, 153));
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/btn-salir.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCancelar.setName("btnCancelar"); // NOI18N
        btnCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnCancelarMousePressed(evt);
            }
        });
        pnlAgregarMenu.add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 420, 110, 40));

        jSeparator15.setForeground(new java.awt.Color(102, 0, 204));
        jSeparator15.setPreferredSize(new java.awt.Dimension(200, 10));
        pnlAgregarMenu.add(jSeparator15, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 240, 260, 10));

        lblCanciones1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblCanciones1.setForeground(new java.awt.Color(255, 255, 255));
        lblCanciones1.setText("Fecha de publicación");
        lblCanciones1.setName("lblCanciones"); // NOI18N
        pnlAgregarMenu.add(lblCanciones1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 190, -1, -1));

        txtFecha.setBackground(new java.awt.Color(0, 0, 51));
        txtFecha.setForeground(new java.awt.Color(102, 102, 102));
        txtFecha.setText("Ingrese fecha de pulicación (dia/mes/año)");
        txtFecha.setAlignmentX(0.8F);
        txtFecha.setBorder(null);
        txtFecha.setMargin(new java.awt.Insets(5, 15, 5, 5));
        txtFecha.setMinimumSize(new java.awt.Dimension(5, 20));
        txtFecha.setName("txtFecha"); // NOI18N
        txtFecha.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtFechaMousePressed(evt);
            }
        });
        pnlAgregarMenu.add(txtFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 210, 260, 30));

        jSeparator16.setForeground(new java.awt.Color(102, 0, 204));
        jSeparator16.setPreferredSize(new java.awt.Dimension(200, 10));
        pnlAgregarMenu.add(jSeparator16, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 220, 260, 10));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- -  - -" }));
        pnlAgregarMenu.add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 310, 260, -1));

        lblDisponible.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblDisponible.setForeground(new java.awt.Color(255, 255, 255));
        lblDisponible.setText("Unidades disponibles");
        lblDisponible.setName("lblDisponible"); // NOI18N
        pnlAgregarMenu.add(lblDisponible, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 280, -1, -1));

        txtDisponible.setBackground(new java.awt.Color(0, 0, 51));
        txtDisponible.setForeground(new java.awt.Color(102, 102, 102));
        txtDisponible.setText("Ingrese cantidad");
        txtDisponible.setAlignmentX(0.8F);
        txtDisponible.setBorder(null);
        txtDisponible.setMargin(new java.awt.Insets(5, 15, 5, 5));
        txtDisponible.setMinimumSize(new java.awt.Dimension(5, 20));
        txtDisponible.setName("txtDisponible"); // NOI18N
        txtDisponible.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtDisponibleMousePressed(evt);
            }
        });
        txtDisponible.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDisponibleActionPerformed(evt);
            }
        });
        pnlAgregarMenu.add(txtDisponible, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 300, 260, 30));

        jSeparator17.setForeground(new java.awt.Color(102, 0, 204));
        jSeparator17.setPreferredSize(new java.awt.Dimension(200, 10));
        pnlAgregarMenu.add(jSeparator17, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 330, 260, 10));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- -  - -" }));
        pnlAgregarMenu.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, 260, -1));

        lblTituloLibro1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTituloLibro1.setForeground(new java.awt.Color(255, 255, 255));
        lblTituloLibro1.setText("Ubicación");
        lblTituloLibro1.setName("lblTituloLibro"); // NOI18N
        pnlAgregarMenu.add(lblTituloLibro1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 350, -1, -1));

        jSeparator11.setForeground(new java.awt.Color(102, 0, 204));
        jSeparator11.setPreferredSize(new java.awt.Dimension(200, 10));
        pnlAgregarMenu.add(jSeparator11, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 400, 260, 10));

        txtUbicacionCV.setBackground(new java.awt.Color(0, 0, 51));
        txtUbicacionCV.setForeground(new java.awt.Color(102, 102, 102));
        txtUbicacionCV.setText("Ingrese la ubicación");
        txtUbicacionCV.setAlignmentX(0.8F);
        txtUbicacionCV.setBorder(null);
        txtUbicacionCV.setMargin(new java.awt.Insets(5, 15, 5, 5));
        txtUbicacionCV.setMinimumSize(new java.awt.Dimension(5, 20));
        txtUbicacionCV.setName("txtTituloLibro"); // NOI18N
        txtUbicacionCV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtUbicacionCVMousePressed(evt);
            }
        });
        pnlAgregarMenu.add(txtUbicacionCV, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 370, 260, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlAgregarMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 889, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlAgregarMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTitulodvdMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTitulodvdMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTitulodvdMouseEntered

    private void txtTitulodvdMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTitulodvdMousePressed
        // TODO add your handling code here:

        if(txtTitulodvd.getText().equals("Ingrese título"))
        txtTitulodvd.setText("");

        if(txtDuracion.getText().equals("") || txtDuracion.getText() == null)
            txtDuracion.setText("Ingrese duracion");

        if(txtFecha.getText().equals("") || txtFecha.getText() == null)
            txtFecha.setText("Ingrese fecha de pulicación (dia/mes/año))");
        
       if(txtUbicacionCV.getText().equals("") || txtUbicacionCV.getText() == null)
        txtUbicacionCV.setText("Ingrese la ubicación");
    }//GEN-LAST:event_txtTitulodvdMousePressed

    private void txtTitulodvdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTitulodvdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTitulodvdActionPerformed

    private void txtDuracionMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDuracionMousePressed
        // TODO add your handling code here:

        if(txtDuracion.getText().equals("Ingrese duracion"))
            txtDuracion.setText("");

        if(txtTitulodvd.getText().equals("") || txtTitulodvd.getText() == null)
            txtTitulodvd.setText("Ingrese título");
        
        if(txtFecha.getText().equals("") || txtFecha.getText() == null)
            txtFecha.setText("Ingrese fecha de pulicación (dia/mes/año))");
                      
       if(txtUbicacionCV.getText().equals("") || txtUbicacionCV.getText() == null)
        txtUbicacionCV.setText("Ingrese la ubicación");
    }//GEN-LAST:event_txtDuracionMousePressed

    private void txtDuracionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDuracionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDuracionActionPerformed

    private void btnAgregarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAgregarMousePressed

        //Comprobar que los datos no sean nulos ni vaciós
        if(txtTitulodvd.getText().equals("Ingrese título")
            || txtDuracion.getText().equals("Ingrese duracion")
            || txtUbicacionCV.getText().equals("Ingrese la ubicación")
            || txtFecha.getText().equals("Ingrese fecha de pulicación (dia/mes/año))")){
            JOptionPane.showMessageDialog(this, "Debe llenar todos los campos \n", "AVISO", JOptionPane.INFORMATION_MESSAGE);
        } else {

            try {
                //Creación de variables que almacenan los datos introducidos
                MaterialesCRUD crud = new MaterialesCRUD();
                String titulo = txtTitulodvd.getText();
                String director = (String)jComboBox1.getSelectedItem();
                String genre = (String)jComboBox2.getSelectedItem();
                String duracion = txtDuracion.getText();
                String fecha = txtFecha.getText();
                String disponible = txtDisponible.getText();
                String ubicacion = txtUbicacionCV.getText();
                
                //Variable que almacenará el incremento del id artista y género
                int idDirector = 1;
                idDirector = incrementarDirector();

                int idGenero = 1;
                idGenero = incrementarGenero();

                //Condicional que lanza mensaje de error si hay algún dato con tipo erróneo
                if( titulo == null || "".equals(titulo)
                    || director == null || "".equals(director)
                    || genre == null || "".equals(genre)
                    || duracion == null || "".equals(duracion)
                    || ubicacion == null || "".equals(ubicacion)
                    || fecha == null || "".equals(fecha)){
                    JOptionPane.showMessageDialog(this, "Rellenar los campos solicitados \n", "AVISO", JOptionPane.INFORMATION_MESSAGE);
                } else {

                    //Llamar a los siguientes métodos, pasándole parámetros
                        //insertarDirector(idDirector, director);
                        //insertarGenero(idGenero, genre);

                    SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
                    java.sql.Date conversion = null;
                    Date fecha_publicacion;

                    try {
                        fecha_publicacion = formato.parse(fecha);
                        conversion = new java.sql.Date(fecha_publicacion.getTime());
                    } catch (ParseException ex) {
                        Logger.getLogger(Agregar_CD.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    //Bloque de código para insertar información en tabla materiales
                    if(crud.insertarDVD(titulo, director, genre, duracion, conversion, disponible, ubicacion)>=1){
                    //Llamada al método limpiar campos
                    limpiarCampos();

                    //Cerrar ventana
                    JOptionPane.showMessageDialog(this, "Datos ingresados correctamente. \n", "AVISO", JOptionPane.INFORMATION_MESSAGE);
                    Dashboard dash = new Dashboard();
                    dash.setVisible(true);
                    this.dispose();
                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(Agregar_DVD.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnAgregarMousePressed

    private void btnCancelarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarMousePressed
        try {
            Menu_Tipo_Material tipo = new Menu_Tipo_Material();
            tipo.setVisible(true);
            this.dispose();
        } catch (SQLException ex) {
            Logger.getLogger(Agregar_DVD.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCancelarMousePressed

    private void txtFechaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtFechaMousePressed

        if(txtFecha.getText().equals("Ingrese fecha de pulicación (dia/mes/año)"))
        txtFecha.setText("");

        if(txtTitulodvd.getText().equals("") || txtTitulodvd.getText() == null)
        txtTitulodvd.setText("Ingrese título");

        if(txtDuracion.getText().equals("") || txtDuracion.getText() == null)
        txtDuracion.setText("Ingrese duracion");

        if(txtDisponible.getText().equals("") || txtDisponible.getText() == null)
        txtDisponible.setText("Ingrese cantidad");
                      
       if(txtUbicacionCV.getText().equals("") || txtUbicacionCV.getText() == null)
        txtUbicacionCV.setText("Ingrese la ubicación");
    }//GEN-LAST:event_txtFechaMousePressed

    private void txtDisponibleMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDisponibleMousePressed

        if(txtDisponible.getText().equals("Ingrese cantidad"))
        txtDisponible.setText("");

        if(txtTitulodvd.getText().equals("") || txtTitulodvd.getText() == null)
        txtTitulodvd.setText("Ingrese título");

        if(txtDuracion.getText().equals("") || txtDuracion.getText() == null)
        txtDuracion.setText("Ingrese duracion");

        if(txtFecha.getText().equals("") || txtFecha.getText() == null)
        txtFecha.setText("Ingrese fecha de pulicación (dia/mes/año)");
        
       if(txtUbicacionCV.getText().equals("") || txtUbicacionCV.getText() == null)
        txtUbicacionCV.setText("Ingrese la ubicación");
    }//GEN-LAST:event_txtDisponibleMousePressed

    private void txtDisponibleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDisponibleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDisponibleActionPerformed

    private void txtUbicacionCVMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtUbicacionCVMousePressed
        if(txtUbicacionCV.getText().equals("Ingrese la ubicación"))
        txtUbicacionCV.setText("");

        if(txtTitulodvd.getText().equals("") || txtTitulodvd.getText() == null)
        txtTitulodvd.setText("Ingrese título");

        if(txtDuracion.getText().equals("") || txtDuracion.getText() == null)
        txtDuracion.setText("Ingrese duracion");

        if(txtFecha.getText().equals("") || txtFecha.getText() == null)
        txtFecha.setText("Ingrese fecha de pulicación (dia/mes/año)");
    }//GEN-LAST:event_txtUbicacionCVMousePressed

    /*
    public int insertarGenero(int idGenero, String genre){
        String sql = "INSERT INTO generos (id,nombre_genero) values (?,?)";
                    PreparedStatement stmt = null;
                    //ResultSet rs = null;
                    int rows = 0;
                    
                    try{
                        con = Conexion.getConnection();
                        stmt = con.prepareStatement(sql);
                        int index = 1;
                        stmt.setInt(index++, idGenero);
                        stmt.setString(index, genre);
                        
                        rows = stmt.executeUpdate();
                        System.out.println("Registros afectados " + rows);
                    }catch(SQLException e){
                        System.out.println("error" + e);
                    } finally{
                        Conexion.close(stmt);
                        Conexion.close(con);
                    }
                    return rows;
    }*/
    
    public void consultarGenero(){
        String sql = "SELECT nombre_genero FROM GENEROS;";
        PreparedStatement stmt = null;
        ResultSet rs = null;
        try {
            con = Conexion.getConnection();
            stmt = con.prepareStatement(sql);
            rs = stmt.executeQuery();
            while (rs.next()) {                
                String nombreGenero = rs.getString("nombre_genero");
                jComboBox2.addItem(nombreGenero);
            }
            
        } catch (Exception e) {
            Logger.getLogger(Agregar_CD.class.getName()).log(Level.SEVERE, null, e);
        } finally{
            Conexion.close(stmt);
            Conexion.close(con);
        }
    }
    
    public void consultarDirector(){
        String sql = "SELECT nombre_director FROM DIRECTORES;";
        PreparedStatement stmt = null;
        ResultSet rs = null;
        try {
            con = Conexion.getConnection();
            stmt = con.prepareStatement(sql);
            rs = stmt.executeQuery();
            while (rs.next()) {                
                String nombreDirector = rs.getString("nombre_director");
                jComboBox1.addItem(nombreDirector);
            }
            
        } catch (Exception e) {
            Logger.getLogger(Agregar_CD.class.getName()).log(Level.SEVERE, null, e);
        } finally{
            Conexion.close(stmt);
            Conexion.close(con);
        }
    }
    
    public int incrementarDirector() throws SQLException{
        int id = 1;
        PreparedStatement ps = null;
        ResultSet rs = null;
        con = Conexion.getConnection();
        try{
            ps = con.prepareStatement("SELECT MAX(id) FROM directores");
            rs = ps.executeQuery();
            while(rs.next()){
                id = rs.getInt(1) + 1;
            }
        }catch(SQLException e){
            System.out.println("Error: " + e);
        } finally{
            Conexion.close(con);
            Conexion.close(ps);
            Conexion.close(rs);
        }
        return id;
    }
    
    
    public int incrementarGenero() throws SQLException{
        int id = 1;
        PreparedStatement ps = null;
        ResultSet rs = null;
        con = Conexion.getConnection();
        try{
            ps = con.prepareStatement("SELECT MAX(id) FROM generos");
            rs = ps.executeQuery();
            while(rs.next()){
                id = rs.getInt(1) + 1;
            }
        }catch(SQLException e){
            System.out.println("Error: " + e);
        } finally{
            Conexion.close(con);
            Conexion.close(ps);
            Conexion.close(rs);
        }
        return id;
    }
    
    public void limpiarCampos(){
        txtTitulodvd.setText("");
        txtDuracion.setText("");
        txtFecha.setText("");
        txtDisponible.setText("");
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Agregar_DVD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Agregar_DVD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Agregar_DVD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Agregar_DVD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Agregar_DVD().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Agregar_DVD.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator13;
    private javax.swing.JSeparator jSeparator15;
    private javax.swing.JSeparator jSeparator16;
    private javax.swing.JSeparator jSeparator17;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JLabel lblCanciones1;
    private javax.swing.JLabel lblDirector;
    private javax.swing.JLabel lblDisponible;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblGenero;
    private javax.swing.JLabel lblNewLibro;
    private javax.swing.JLabel lblTituloLibro1;
    private javax.swing.JLabel lblTitulodvd;
    private javax.swing.JPanel pnlAgregarMenu;
    private javax.swing.JTextField txtDisponible;
    private javax.swing.JTextField txtDuracion;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtTitulodvd;
    private javax.swing.JTextField txtUbicacionCV;
    // End of variables declaration//GEN-END:variables
}
